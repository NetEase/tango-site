"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1991],{876:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8132:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7896),r=(n(2784),n(876));const o={},i="Async Services",s={unversionedId:"boot/service",id:"boot/service",title:"Async Services",description:"TangoBoot provides a configuration-based method for creating data service functions. By using defineServices, it is very easy to declare a set of asynchronous service functions for consumption by the view layer or model layer.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/boot/service.mdx",sourceDirName:"boot",slug:"/boot/service",permalink:"/tango/en/docs/boot/service",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/boot/service.mdx",tags:[],version:"current",frontMatter:{},sidebar:"boot",previous:{title:"App Entry",permalink:"/tango/en/docs/boot/app"},next:{title:"States",permalink:"/tango/en/docs/boot/store"}},l={},c=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Request Config",id:"request-config",level:2},{value:"Error Messages",id:"error-messages",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"async-services"},"Async Services"),(0,r.kt)("p",null,"TangoBoot provides a configuration-based method for creating data service functions. By using ",(0,r.kt)("inlineCode",{parentName:"p"},"defineServices"),", it is very easy to declare a set of asynchronous service functions for consumption by the view layer or model layer."),(0,r.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { defineServices } from '@music163/tango-boot';\n\nconst services = defineServices({\n  list: {\n    url: 'https://nei.hz.netease.com/api/apimock-v2/c45109399a1d33d83e32a59984b25b00/api/users',\n  },\n  add: {\n    url: 'https://nei.hz.netease.com/api/apimock-v2/c45109399a1d33d83e32a59984b25b00/api/users',\n    method: 'post',\n  },\n});\n")),(0,r.kt)("p",null,"call the service function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"async () => {\n  // simple usage\n  await services.list();\n\n  // call with params, payload the the data passed to request body(for 'get' method, will be query parameters), config the axios request config\n  await services.add(payload, config);\n};\n")),(0,r.kt)("h2",{id:"request-config"},"Request Config"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"defineServices")," use ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/axios/axios"},"axios")," to send requests, so you can pass in the axios request config as the second parameter of the service function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { defineServices } from '@music163/tango-boot';\n\nexport default defineServices({\n  list: {\n    url: 'https://nei.hz.netease.com/api/apimock-v2/c45109399a1d33d83e32a59984b25b00/api/users',\n    formatter: (res) => {\n      const { data, message } = res;\n      return {\n        code: 200,\n        list: data,\n        total: data.length,\n        message,\n      };\n    },\n    // you can pass other axios config here\n  },\n});\n")),(0,r.kt)("p",null,"Following is the common configs\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"url")," request url"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"method")," request method\uff0cdefault is ",(0,r.kt)("inlineCode",{parentName:"li"},"GET"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GET")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"POST")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PUT")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DELETE")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"formatter")," format the response data"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"requestType")," encoding type of request body (content-type), default value is ",(0,r.kt)("inlineCode",{parentName:"li"},"json"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"json")," By default, serialize JavaScript objects to JSON."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"x-www-form-urlencoded")," equals to ",(0,r.kt)("inlineCode",{parentName:"li"},"application/x-www-form-urlencoded")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"headers")," request header"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," timeout of request")),(0,r.kt)("p",null,"more configs should find in ",(0,r.kt)("a",{parentName:"p",href:"https://axios-http.com/zh/docs/req_config"},"axios documentation"),"\u3002"),(0,r.kt)("admonition",{title:"Encoding Type",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"By default, TangoBoot serializes JavaScript objects to JSON. To send data in ",(0,r.kt)("inlineCode",{parentName:"p"},"application/x-www-form-urlencoded")," format, you can set the ",(0,r.kt)("inlineCode",{parentName:"p"},"requestType")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"x-www-form-urlencoded"),"."),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"application/x-www-form-urlencoded")," data is encoded as key-value pairs separated by '&', with keys and values separated by '='. Non-alphanumeric characters are ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/zh-CN/docs/Glossary/percent-encoding"},"percent-encoded"),", which is why this type does not support binary data (use multipart/form-data instead).")),(0,r.kt)("h2",{id:"error-messages"},"Error Messages"),(0,r.kt)("p",null,"The default presentation method of the message when a configuration request error occurs is to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"message")," component for message overlay display. It is recommended to configure this in the application's entry file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { tangoBootConfig } from '@music163/tango-boot';\nimport { message } from '@music163/antd';\n\ntangoBootConfig.toast = message;\n")))}d.isMDXComponent=!0}}]);