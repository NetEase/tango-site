"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6444],{876:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=o,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6947:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7896),o=(n(2784),n(876));const a={},i="TangoBoot",s={unversionedId:"boot/intro",id:"boot/intro",title:"TangoBoot",description:"TangoBoot is a frontend application framework that serves the Tango low-code application development system. It provides standard data requests, state management, and routing solutions, as well as generic runtime utility functions, allowing developers to generate single-page applications through simple configuration.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/boot/intro.mdx",sourceDirName:"boot",slug:"/boot/intro",permalink:"/tango/en/docs/boot/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/boot/intro.mdx",tags:[],version:"current",frontMatter:{},sidebar:"boot",next:{title:"Directory Structure",permalink:"/tango/en/docs/boot/app-spec"}},c={},l=[{value:"Application Architecture",id:"application-architecture",level:2},{value:"Core API",id:"core-api",level:2},{value:"Create app entry",id:"create-app-entry",level:3},{value:"Create Observable States",id:"create-observable-states",level:3},{value:"Create Reactive Views",id:"create-reactive-views",level:3},{value:"Create Service Functions",id:"create-service-functions",level:3}],p={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"tangoboot"},"TangoBoot"),(0,o.kt)("p",null,"TangoBoot is a frontend application framework that serves the Tango low-code application development system. It provides standard data requests, state management, and routing solutions, as well as generic runtime utility functions, allowing developers to generate single-page applications through simple configuration."),(0,o.kt)("h2",{id:"application-architecture"},"Application Architecture"),(0,o.kt)("p",null,"The application architecture of TangoBoot uses the View-Model-Service three-layer model. The model layer defines Observable States, the view layer observes the changes of the model and updates automatically, and the service layer is used to create a set of service functions for the consumption of the view layer and the model layer. The diagram is shown in the figure below:"),(0,o.kt)("img",{alt:"image",width:"600px",src:"https://p6.music.126.net/obj/wonDlsKUwrLClGjCm8Kx/13760951704/985c/9706/7f18/be713816a143d3a054f51c9d1fc59b36.png"}),(0,o.kt)("h2",{id:"core-api"},"Core API"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"runApp")," create the app entry"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"definePage")," define reactive views"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"defineStore")," define observable states"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"defineServices")," define async service functions")),(0,o.kt)("h3",{id:"create-app-entry"},"Create app entry"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"index.js")," is the app entry file\uff0ca simple example is:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { runApp } from '@music163/tango-boot';\nimport routes from './routes';\nimport services from './services';\nimport home from './stores/home';\nimport counter from './stores/counter';\nimport './global.less';\n\nconst { mount, unmount, bootstrap } = runApp({\n  boot: {\n    mountElement: document.querySelector('#root'),\n    qiankun: false,\n  },\n\n  stores: {\n    home,\n    counter,\n  },\n\n  services,\n\n  router: {\n    type: 'browser',\n    config: routes,\n  },\n});\n\nexport { mount, unmount, bootstrap };\n")),(0,o.kt)("h3",{id:"create-observable-states"},"Create Observable States"),(0,o.kt)("p",null,"Defining a view model through defineStore is very simple, simply declare the state and actions."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { defineStore } from '@music163/tango-boot';\n\nconst counter = defineStore({\n  num: 0,\n\n  get() {},\n\n  decrement: function () {\n    counter.num--;\n  },\n\n  increment: () => counter.num++,\n});\n\nexport default counter;\n")),(0,o.kt)("h3",{id:"create-reactive-views"},"Create Reactive Views"),(0,o.kt)("p",null,"If the view layer needs to listen for state changes, it only needs to wrap the view component with ",(0,o.kt)("inlineCode",{parentName:"p"},"definePage"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport tango, { definePage } from '@music163/tango-boot';\n\nclass App extends React.Component {\n  increment = () => {\n    tango.stores.counter.increment();\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Counter: {tango.stores.counter.num}</h1>\n        <button type=\"primary\" onClick={this.increment}>\n          +1\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default definePage(App);\n")),(0,o.kt)("h3",{id:"create-service-functions"},"Create Service Functions"),(0,o.kt)("p",null,"Use ",(0,o.kt)("inlineCode",{parentName:"p"},"defineServices")," to define your remote apis as service functions."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { defineServices } from '@music163/tango-boot';\n\nexport default defineServices({\n  list: {\n    url: 'https://nei.hz.netease.com/api/apimock-v2/c45109399a1d33d83e32a59984b25b00/api/users',\n    formatter: (res) => {\n      const { data, message } = res;\n      return {\n        code: 200,\n        list: data,\n        total: data.length,\n        message,\n      };\n    },\n  },\n  add: {\n    url: 'https://nei.hz.netease.com/api/apimock-v2/c45109399a1d33d83e32a59984b25b00/api/users',\n    method: 'post',\n  },\n  update: {\n    url: 'https://nei.hz.netease.com/api/apimock-v2/c45109399a1d33d83e32a59984b25b00/api/users',\n    method: 'post',\n  },\n  delete: {\n    url: 'https://nei.hz.netease.com/api/apimock-v2/c45109399a1d33d83e32a59984b25b00/api/users?id=1',\n  },\n});\n")))}m.isMDXComponent=!0}}]);